name: Tests & QA
on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - release/**
jobs:
  insights:
    name: PHP Insights
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare mysql
        run: cp docker/mysql/.env docker/mysql/.env.local
      - name: Run containers
        run: docker-compose up -d
      - name: setup composer
        shell: 'script -q -e -c "bash {0}"'
        run: docker-compose exec php composer install
      - name: php insights
        shell: 'script -q -e -c "bash {0}"'
        run: docker-compose exec php ./vendor/bin/phpinsights -n --format=json > ./phpinsights.json
      - name: Archive Insights report
        uses: actions/upload-artifact@v2
        with:
          name: insights-report
          path: ./phpinsights.json

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare mysql
        run: cp docker/mysql/.env docker/mysql/.env.local
      - name: Run containers
        run: docker-compose up -d
      - name: setup composer
        shell: 'script -q -e -c "bash {0}"'
        run: docker-compose exec php composer install
      - name: Migrations
        shell: 'script -q -e -c "bash {0}"'
        run: docker-compose exec php bin/console doctrine:schema:update --force --env=test
      - name: Fixtures
        shell: 'script -q -e -c "bash {0}"'
        run: docker-compose exec php bin/console doctrine:fixtures:load --env=test -n
      - name: Oauth
        shell: 'script -q -e -c "bash {0}"'
        run: mkdir -p symfony/var/oauth && docker-compose exec php openssl genrsa -out var/oauth/private.key 2048 && docker-compose exec php openssl rsa -in var/oauth/private.key -pubout -out var/oauth/public.key
      - name: phpunit
        shell: 'script -q -e -c "bash {0}"'
        run: docker-compose exec php -dxdebug.mode=coverage ./vendor/bin/simple-phpunit
      - name: Archive Code coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ./symfony/tests/coverage