# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    module_controllers:
        namespace: App\
        resource: '../src/{Modules}/*/Action'
        tags: ['controller.service_arguments']

    command_handlers:
        namespace: App\
        resource: '../src/{Modules}/*/Messenger/Commands/*Handler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: command.bus }

    query_handlers:
        namespace: App\
        resource: '../src/{Modules}/*/Messenger/Queries/*Handler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: query.bus }

    event_handlers:
        namespace: App\
        resource: '../src/{Modules}/*/Messenger/Events/*When*Handler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: event.bus }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ## COMMON ##

    App\Modules\Common\EventSubscriber\LocaleSubscriber:
        arguments: ['%kernel.default_locale%']
        tags: [kernel.event_subscriber]

    App\Modules\UserManagement\GraphQL\Type\UserStatusTypeConverter:
        decorates: api_platform.graphql.type_converter

    App\Modules\UserManagement\GraphQL\Type\UserPermissionsTypeConverter:
        decorates: api_platform.graphql.type_converter

    ## SECURITY ##
    App\Modules\Security\EventListener\AuthorizationCodeListener:
        tags:
            - { name: kernel.event_listener, event: 'trikoder.oauth2.authorization_request_resolve', method: onAuthorizationRequestResolve }

    App\Modules\Security\Authorization\PermissionVoter:
        tags:
            - { name: security.voter, priority: 255 }

    ## USER MANAGEMENT ##
    app.security.provider.oauth:
        class: App\Modules\Security\Authorization\OAuthUserProvider
        autoconfigure: false
        autowire: true
        arguments:
            $class: App\Entity\Security\User
            $properties:
                github: githubId
            $managerName: default